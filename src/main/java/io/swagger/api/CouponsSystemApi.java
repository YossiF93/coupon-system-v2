/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ClientLoginDetails;
import io.swagger.model.ClientSigningDetails;
import io.swagger.model.CompaniesList;
import io.swagger.model.CompanyDetails;
import io.swagger.model.CouponDetails;
import io.swagger.model.CouponType;
import io.swagger.model.CouponsList;
import io.swagger.model.CustomerDetails;
import io.swagger.model.CustomersList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-07T12:48:49.640227100+03:00[Asia/Jerusalem]")

@Api(value = "coupons-system", description = "the coupons-system API")
public interface CouponsSystemApi {

    @ApiOperation(value = "Create a new company in the coupon system", nickname = "adminCreateCompany", notes = "", response = String.class, tags={ "Admin Functionality - Companies", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Comapny created successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/createCompany",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> adminCreateCompany(@ApiParam(value = "CompanyDetails" ,required=true )  @Valid @RequestBody CompanyDetails body);


    @ApiOperation(value = "Create a new customer in the coupon system", nickname = "adminCreateCustomer", notes = "", response = String.class, tags={ "Admin Functionality - Customers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Customer created successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/createCustomer",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> adminCreateCustomer(@ApiParam(value = "CustomerDetails"  )  @Valid @RequestBody ClientSigningDetails body);


    @ApiOperation(value = "Login to the Coupon system", nickname = "clientLogin", notes = "", response = String.class, tags={ "Login API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The User Login successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/login",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> clientLogin(@ApiParam(value = "User login details" ,required=true )  @Valid @RequestBody ClientLoginDetails body);


    @ApiOperation(value = "Sign in as a new member to the Coupon system", nickname = "clientSigning", notes = "", response = String.class, tags={ "Signing API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The user sign-in successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/signing",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> clientSigning(@ApiParam(value = "User sign-in Details" ,required=true )  @Valid @RequestBody ClientSigningDetails body);


    @ApiOperation(value = "Create a new company in the coupon system", nickname = "createCompany", notes = "", response = String.class, tags={ "Signing API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Comapny created successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/signing/createCompany",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> createCompany(@ApiParam(value = "CompanyDetails" ,required=true )  @Valid @RequestBody CompanyDetails body);


    @ApiOperation(value = "Create a new company coupon in the coupon system", nickname = "createCompanyCoupon", notes = "", response = String.class, tags={ "Company Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Coupon created successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/company/createCoupon",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> createCompanyCoupon(@ApiParam(value = "CouponDetails"  )  @Valid @RequestBody CouponDetails body);


    @ApiOperation(value = "Create a new Coupon in the coupon system", nickname = "createCoupon", notes = "", response = String.class, tags={ "Admin Functionality - Coupons", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Coupon created successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/createCoupon",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> createCoupon(@ApiParam(value = "CouponDetails"  )  @Valid @RequestBody CouponDetails body);


    @ApiOperation(value = "Create a new customer in the coupon system", nickname = "createCustomer", notes = "", response = String.class, tags={ "Signing API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Customer created successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/signing/createCustomer",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> createCustomer(@ApiParam(value = "CustomerDetails"  )  @Valid @RequestBody ClientSigningDetails body);


    @ApiOperation(value = "get the details of all the companies registered in the coupon system.", nickname = "getAllCompanies", notes = "", response = CompaniesList.class, tags={ "Admin Functionality - Companies", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Companies has been successfully retrieved from the server", response = CompaniesList.class) })
    @RequestMapping(value = "/coupons-system/admin/getCompaniesDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CompaniesList> getAllCompanies();


    @ApiOperation(value = "get the Coupons registered in the coupon system by companyId.", nickname = "getAllCoupons", notes = "", response = CouponsList.class, tags={ "Admin Functionality - Coupons", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Coupons has been successfully retrieved from the server", response = CouponsList.class) })
    @RequestMapping(value = "/coupons-system/admin/getCouponsDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CouponsList> getAllCoupons(@ApiParam(value = "Id of the company") @Valid @RequestParam(value = "companyId", required = false) Integer companyId);


    @ApiOperation(value = "get all the Customers registered in the coupon system.", nickname = "getAllCustomers", notes = "", response = CustomersList.class, tags={ "Admin Functionality - Customers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Customer has been successfully retrieved from the server", response = CustomersList.class) })
    @RequestMapping(value = "/coupons-system/admin/getAllCustomers",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CustomersList> getAllCustomers();


    @ApiOperation(value = "get the available coupons for the client in the coupon system.", nickname = "getAvailableCoupons", notes = "", response = CouponType.class, tags={ "Customer Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Coupons has been successfully retrieved from the server", response = CouponType.class) })
    @RequestMapping(value = "/coupons-system/customer/getAvailableCoupons",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CouponType> getAvailableCoupons(@NotNull @ApiParam(value = "Id of the customer", required = true) @Valid @RequestParam(value = "customerId", required = true) Integer customerId,@ApiParam(value = "The Coupon type") @Valid @RequestParam(value = "couponType", required = false) CouponsList couponType,@ApiParam(value = "price of the coupon") @Valid @RequestParam(value = "price", required = false) Integer price);


    @ApiOperation(value = "get company details from the coupon system.", nickname = "getCompanyAsAdmin", notes = "", response = CompanyDetails.class, tags={ "Admin Functionality - Companies", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Company was successfully retrieved from the server", response = CompanyDetails.class) })
    @RequestMapping(value = "/coupons-system/admin/getCompanyDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CompanyDetails> getCompanyAsAdmin(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId);


    @ApiOperation(value = "get a Coupon details from the coupon system.", nickname = "getCompanyCoupon", notes = "", response = CouponDetails.class, tags={ "Company Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Coupon was successfully retrieved from the server", response = CouponDetails.class) })
    @RequestMapping(value = "/coupons-system/company/getCouponDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CouponDetails> getCompanyCoupon(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId);


    @ApiOperation(value = "get the company coupons.", nickname = "getCompanyCoupons", notes = "", response = CouponsList.class, tags={ "Company Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Coupons has been successfully retrieved from the server", response = CouponsList.class) })
    @RequestMapping(value = "/coupons-system/company/getCouponsDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CouponsList> getCompanyCoupons();


    @ApiOperation(value = "get a Coupon details from the coupon system.", nickname = "getCouponDetailsAsAdmin", notes = "", response = CouponDetails.class, tags={ "Admin Functionality - Coupons", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Coupon was successfully retrieved from the server", response = CouponDetails.class) })
    @RequestMapping(value = "/coupons-system/admin/getCouponDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CouponDetails> getCouponDetailsAsAdmin(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId);


    @ApiOperation(value = "get a Customer details from the coupon system.", nickname = "getCustomerAsAdmin", notes = "", response = CustomerDetails.class, tags={ "Admin Functionality - Customers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Customer was successfully retrieved from the server", response = CustomerDetails.class) })
    @RequestMapping(value = "/coupons-system/admin/getCustomer",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CustomerDetails> getCustomerAsAdmin(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "customerId", required = true) Integer customerId);


    @ApiOperation(value = "get the Coupons registered in the coupon system by customerId.", nickname = "getCustomerCoupons", notes = "", response = CouponsList.class, tags={ "Customer Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Coupons has been successfully retrieved from the server", response = CouponsList.class) })
    @RequestMapping(value = "/coupons-system/admin/getCustomerCoupons",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CouponsList> getCustomerCoupons(@ApiParam(value = "Id of the customer") @Valid @RequestParam(value = "customerId", required = false) Integer customerId);


    @ApiOperation(value = "get a Customer details from the coupon system.", nickname = "getCustomerDetails", notes = "", response = CustomerDetails.class, tags={ "Customer Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The Customer was successfully retrieved from the server", response = CustomerDetails.class) })
    @RequestMapping(value = "/coupons-system/customer/getCustomer",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CustomerDetails> getCustomerDetails(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "customerId", required = true) Integer customerId);


    @ApiOperation(value = "Remove exsiting company from the coupon system", nickname = "removeComapny", notes = "", response = String.class, tags={ "Admin Functionality - Companies", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Comapny removed successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/removeCompany",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> removeComapny(@NotNull @ApiParam(value = "Id of the company", required = true) @Valid @RequestParam(value = "companyId", required = true) Integer companyId);


    @ApiOperation(value = "Remove exsiting company coupon from the coupon system", nickname = "removeCompanyCoupon", notes = "", response = String.class, tags={ "Company Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Coupon removed successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/company/removeCoupon",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> removeCompanyCoupon(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId);


    @ApiOperation(value = "Remove exsiting Coupon from the coupon system", nickname = "removeCoupon", notes = "", response = String.class, tags={ "Admin Functionality - Coupons", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Coupon removed successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/removeCoupon",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> removeCoupon(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId);


    @ApiOperation(value = "Remove exsiting customer from the coupon system", nickname = "removeCustomer", notes = "", response = String.class, tags={ "Admin Functionality - Customers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Customer removed successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/removeCustomer",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> removeCustomer(@NotNull @ApiParam(value = "Id of the customer", required = true) @Valid @RequestParam(value = "customerId", required = true) Integer customerId);


    @ApiOperation(value = "Update exsiting company details", nickname = "updateComapny", notes = "", response = String.class, tags={ "Admin Functionality - Companies", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Comapny details updated successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/updateCompany",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> updateComapny(@NotNull @ApiParam(value = "Id of the company", required = true) @Valid @RequestParam(value = "companyId", required = true) Integer companyId,@ApiParam(value = "CompanyDetails"  )  @Valid @RequestBody CompanyDetails body);


    @ApiOperation(value = "Update exsiting Coupon details", nickname = "updateCoupon", notes = "", response = String.class, tags={ "Company Functionality", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Coupon details Updated successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/company/updateCoupon",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> updateCoupon(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId,@ApiParam(value = "couponDetails"  )  @Valid @RequestBody CouponDetails body);


    @ApiOperation(value = "Update exsiting Coupon details", nickname = "updateCouponAsAdmin", notes = "", response = String.class, tags={ "Admin Functionality - Coupons", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Coupon details Updated successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/updateCoupon",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> updateCouponAsAdmin(@NotNull @ApiParam(value = "Id of the coupon", required = true) @Valid @RequestParam(value = "couponId", required = true) Integer couponId,@ApiParam(value = "couponDetails"  )  @Valid @RequestBody CouponDetails body);


    @ApiOperation(value = "Update exsiting cutomer details", nickname = "updateCustomer", notes = "", response = String.class, tags={ "Admin Functionality - Customers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Customer details Updated successfully", response = String.class) })
    @RequestMapping(value = "/coupons-system/admin/updateCustomer",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> updateCustomer(@NotNull @ApiParam(value = "Id of the customer", required = true) @Valid @RequestParam(value = "customerId", required = true) Integer customerId,@ApiParam(value = "CustomerDetails"  )  @Valid @RequestBody ClientLoginDetails body);

}
